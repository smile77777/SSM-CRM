package com.ljc.crm.workbench.mapper;

import com.ljc.crm.workbench.pojo.Activity;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Thu Feb 16 16:34:37 CST 2023
     */
    int deleteByPrimaryKey(String id);



    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Thu Feb 16 16:34:37 CST 2023
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Thu Feb 16 16:34:37 CST 2023
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Thu Feb 16 16:34:37 CST 2023
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Thu Feb 16 16:34:37 CST 2023
     */
    int updateByPrimaryKey(Activity record);

    /**
     * 保存创建的市场活动
     * @param activity
     * @return
     */
    int insertActivity(Activity activity);

    /**
     * 分页条件查询市场活动
     * @param map
     * @return
     */
    List<Activity> selectActivityByConditionForPage(Map<String,Object> map);

    /**
     * 查询符合条件的记录条数
     * @param map
     * @return
     */
    int selectCountOfActivityByCondition(Map<String,Object> map);

    /**
     * 根据id删除记录
     * @param ids
     * @return
     */
    int deleteActivityByIds(String[] ids);

    /**
     * 根据id选择记录
     * @param id
     * @return
     */
    Activity selectActivityById(String id);

    /**
     * 修改记录
     * @param activity
     * @return
     */
    int updateActivity(Activity activity);

    /**
     * 查询所有记录
     * @return
     */
    List<Activity> selectAllActivitys();

    /**
     * 查询选中的记录
     * @param ids
     * @return
     */
    List<Activity> selectActivitysByIds(String[] ids);

    /**
     * 批量保存创建的记录条数
     * @param activityList
     * @return
     */
    int insertActivityByList(List<Activity> activityList);

    Activity selectActivityForDetailById(String id);
}
